// Code generated by sqlc. DO NOT EDIT.

package database

import (
	"context"
	"database/sql"
)

type Querier interface {
	EmailConfirmByAddress(ctx context.Context, arg EmailConfirmByAddressParams) (Email, error)
	EmailConfirmById(ctx context.Context, arg EmailConfirmByIdParams) (Email, error)
	EmailCreateConfirmedOne(ctx context.Context, arg EmailCreateConfirmedOneParams) (Email, error)
	EmailCreateOne(ctx context.Context, address string) (Email, error)
	EmailDeleteByAddress(ctx context.Context, address string) (Email, error)
	EmailDeleteById(ctx context.Context, id int64) (Email, error)
	EmailGetOneByAddress(ctx context.Context, address string) (Email, error)
	EmailGetOneById(ctx context.Context, id int64) (Email, error)
	LinkedInConfirmById(ctx context.Context, arg LinkedInConfirmByIdParams) (LinkedIn, error)
	LinkedInConfirmByLogin(ctx context.Context, arg LinkedInConfirmByLoginParams) (LinkedIn, error)
	LinkedInCreateOne(ctx context.Context, arg LinkedInCreateOneParams) (LinkedIn, error)
	LinkedInDeleteById(ctx context.Context, id int64) (LinkedIn, error)
	LinkedInDeleteByLogin(ctx context.Context, login sql.NullString) (LinkedIn, error)
	LinkedInGetById(ctx context.Context, id int64) (LinkedIn, error)
	PhoneConfirmById(ctx context.Context, arg PhoneConfirmByIdParams) (Phone, error)
	PhoneConfirmByNumberAndCountryCode(ctx context.Context, arg PhoneConfirmByNumberAndCountryCodeParams) (Phone, error)
	PhoneCreateOne(ctx context.Context, arg PhoneCreateOneParams) (Phone, error)
	PhoneDeleteByCountryCodeAndNumber(ctx context.Context, arg PhoneDeleteByCountryCodeAndNumberParams) (Phone, error)
	PhoneDeleteById(ctx context.Context, id int64) (Phone, error)
	PhoneGetById(ctx context.Context, id int64) (Phone, error)
	PhoneGetByNumberAndCountryCode(ctx context.Context, arg PhoneGetByNumberAndCountryCodeParams) (Phone, error)
	UserCreateOne(ctx context.Context, arg UserCreateOneParams) (User, error)
	UserDeleteById(ctx context.Context, id int64) (User, error)
	UserGetById(ctx context.Context, id int64) (User, error)
	UserGetOneByEmailAddress(ctx context.Context, address string) (User, error)
	UserGetOneByEmailId(ctx context.Context, id int64) (User, error)
	UserGetPreloadedById(ctx context.Context, id int64) (UserGetPreloadedByIdRow, error)
	UserSetAvatarUriById(ctx context.Context, arg UserSetAvatarUriByIdParams) (User, error)
}

var _ Querier = (*Queries)(nil)
